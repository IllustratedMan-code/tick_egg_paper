{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/free-style/dist.es2015/index.js","webpack://@jupyterlab/application-top/./node_modules/typestyle/lib.es2015/internal/formatting.js","webpack://@jupyterlab/application-top/./node_modules/typestyle/lib.es2015/internal/utilities.js","webpack://@jupyterlab/application-top/./node_modules/typestyle/lib.es2015/internal/typestyle.js","webpack://@jupyterlab/application-top/./node_modules/typestyle/lib.es2015/index.js"],"names":["uniqueId","CSS_NUMBER","Object","create","CSS_NUMBER_KEYS","property","prefix","escape","str","replace","hyphenate","propertyName","m","toLowerCase","stringHash","value","len","length","charCodeAt","toString","styleToString","key","sortTuples","sort","a","b","parseStyles","styles","hasNestedStyles","properties","nestedStyles","keys","name","trim","Array","isArray","push","style","stringifyProperties","nested","isUnique","$unique","map","x","join","interpolate","selector","parent","indexOf","stylize","rulesList","stylesList","pid","child","rules","composeStylize","cache","className","isStyle","id","item","Style","add","Selector","Rule","arr","res","i","noopChanges","undefined","change","remove","Cache","constructor","changes","this","sheet","changeId","_keys","_children","_counters","count","clone","getStyles","curIndex","prevItemChangeId","merge","splice","index","prevChangeId","unmerge","values","super","rule","$displayName","FreeStyle","registerStyle","registerKeyframes","keyframes","registerHashRule","registerRule","registerCss","convertToStyles","object","val","subproperties","convertToKeyframes","frames","result","offset","$debugName","raf","requestAnimationFrame","cb","setTimeout","window","bind","classes","_i","arguments","c","reduce","flattened","concat","filter","extend","objects","_a","objects_1","media","mediaQuery","mediaQuerySections","type","orientation","minWidth","mediaLength","maxWidth","minHeight","maxHeight","stringMediaQuery","$nest","apply","createFreeStyle","TypeStyle","_this","autoGenerateTag","cssRaw","mustBeValidCSS","_raw","_pendingRawChange","_styleUpdated","cssRule","_freeStyle","forceRenderStyles","target","_getTag","textContent","fontFace","freeStyle","_b","face","animationName","reinit","_lastFreeStyleChangeId","setStylesTarget","tag","_tag","stylesheet","classNames","getOwnPropertyNames","classNames_1","classDef","_autoGenerateTag","_pending","prototype","_afterAllSync","pending","document","createElement","head","appendChild","lastChangeId","ts","createTypeStyle","instance"],"mappings":"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","file":"466.239a0c009f33f1cb7cab.js?v=239a0c009f33f1cb7cab","sourcesContent":["/**\n * The unique id is used for unique hashes.\n */\nlet uniqueId = 0;\n/**\n * Quick dictionary lookup for unit-less numbers.\n */\nconst CSS_NUMBER = Object.create(null);\n/**\n * CSS properties that are valid unit-less numbers.\n *\n * Ref: https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js\n */\nconst CSS_NUMBER_KEYS = [\n    \"animation-iteration-count\",\n    \"border-image-outset\",\n    \"border-image-slice\",\n    \"border-image-width\",\n    \"box-flex\",\n    \"box-flex-group\",\n    \"box-ordinal-group\",\n    \"column-count\",\n    \"columns\",\n    \"counter-increment\",\n    \"counter-reset\",\n    \"flex\",\n    \"flex-grow\",\n    \"flex-positive\",\n    \"flex-shrink\",\n    \"flex-negative\",\n    \"flex-order\",\n    \"font-weight\",\n    \"grid-area\",\n    \"grid-column\",\n    \"grid-column-end\",\n    \"grid-column-span\",\n    \"grid-column-start\",\n    \"grid-row\",\n    \"grid-row-end\",\n    \"grid-row-span\",\n    \"grid-row-start\",\n    \"line-clamp\",\n    \"line-height\",\n    \"opacity\",\n    \"order\",\n    \"orphans\",\n    \"tab-size\",\n    \"widows\",\n    \"z-index\",\n    \"zoom\",\n    // SVG properties.\n    \"fill-opacity\",\n    \"flood-opacity\",\n    \"stop-opacity\",\n    \"stroke-dasharray\",\n    \"stroke-dashoffset\",\n    \"stroke-miterlimit\",\n    \"stroke-opacity\",\n    \"stroke-width\"\n];\n// Add vendor prefixes to all unit-less properties.\nfor (const property of CSS_NUMBER_KEYS) {\n    for (const prefix of [\"-webkit-\", \"-ms-\", \"-moz-\", \"-o-\", \"\"]) {\n        CSS_NUMBER[prefix + property] = true;\n    }\n}\n/**\n * Escape a CSS class name.\n */\nfunction escape(str) {\n    return str.replace(/[ !#$%&()*+,./;<=>?@[\\]^`{|}~\"'\\\\]/g, \"\\\\$&\");\n}\n/**\n * Transform a JavaScript property into a CSS property.\n */\nfunction hyphenate(propertyName) {\n    return propertyName\n        .replace(/[A-Z]/g, (m) => `-${m.toLowerCase()}`)\n        .replace(/^ms-/, \"-ms-\"); // Internet Explorer vendor prefix.\n}\n/**\n * Generate a hash value from a string.\n */\nfunction stringHash(str) {\n    let value = 5381;\n    let len = str.length;\n    while (len--)\n        value = (value * 33) ^ str.charCodeAt(len);\n    return (value >>> 0).toString(36);\n}\n/**\n * Transform a style string to a CSS string.\n */\nfunction styleToString(key, value) {\n    if (value && typeof value === \"number\" && !CSS_NUMBER[key]) {\n        return `${key}:${value}px`;\n    }\n    return `${key}:${value}`;\n}\n/**\n * Sort an array of tuples by first value.\n */\nfunction sortTuples(value) {\n    return value.sort((a, b) => (a[0] > b[0] ? 1 : -1));\n}\n/**\n * Categorize user styles.\n */\nfunction parseStyles(styles, hasNestedStyles) {\n    const properties = [];\n    const nestedStyles = [];\n    // Sort keys before adding to styles.\n    for (const key of Object.keys(styles)) {\n        const name = key.trim();\n        const value = styles[key];\n        if (name.charCodeAt(0) !== 36 /* $ */ && value != null) {\n            if (typeof value === \"object\" && !Array.isArray(value)) {\n                nestedStyles.push([name, value]);\n            }\n            else {\n                properties.push([hyphenate(name), value]);\n            }\n        }\n    }\n    return {\n        style: stringifyProperties(sortTuples(properties)),\n        nested: hasNestedStyles ? nestedStyles : sortTuples(nestedStyles),\n        isUnique: !!styles.$unique\n    };\n}\n/**\n * Stringify an array of property tuples.\n */\nfunction stringifyProperties(properties) {\n    return properties\n        .map(([name, value]) => {\n        if (!Array.isArray(value))\n            return styleToString(name, value);\n        return value.map(x => styleToString(name, x)).join(\";\");\n    })\n        .join(\";\");\n}\n/**\n * Interpolate CSS selectors.\n */\nfunction interpolate(selector, parent) {\n    if (selector.indexOf(\"&\") === -1)\n        return `${parent} ${selector}`;\n    return selector.replace(/&/g, parent);\n}\n/**\n * Recursive loop building styles with deferred selectors.\n */\nfunction stylize(selector, styles, rulesList, stylesList, parent) {\n    const { style, nested, isUnique } = parseStyles(styles, selector !== \"\");\n    let pid = style;\n    if (selector.charCodeAt(0) === 64 /* @ */) {\n        const child = {\n            selector,\n            styles: [],\n            rules: [],\n            style: parent ? \"\" : style\n        };\n        rulesList.push(child);\n        // Nested styles support (e.g. `.foo > @media > .bar`).\n        if (style && parent) {\n            child.styles.push({ selector: parent, style, isUnique });\n        }\n        for (const [name, value] of nested) {\n            pid += name + stylize(name, value, child.rules, child.styles, parent);\n        }\n    }\n    else {\n        const key = parent ? interpolate(selector, parent) : selector;\n        if (style)\n            stylesList.push({ selector: key, style, isUnique });\n        for (const [name, value] of nested) {\n            pid += name + stylize(name, value, rulesList, stylesList, key);\n        }\n    }\n    return pid;\n}\n/**\n * Transform `stylize` tree into style objects.\n */\nfunction composeStylize(cache, pid, rulesList, stylesList, className, isStyle) {\n    for (const { selector, style, isUnique } of stylesList) {\n        const key = isStyle ? interpolate(selector, className) : selector;\n        const id = isUnique\n            ? `u\\0${(++uniqueId).toString(36)}`\n            : `s\\0${pid}\\0${style}`;\n        const item = new Style(style, id);\n        item.add(new Selector(key, `k\\0${pid}\\0${key}`));\n        cache.add(item);\n    }\n    for (const { selector, style, rules, styles } of rulesList) {\n        const item = new Rule(selector, style, `r\\0${pid}\\0${selector}\\0${style}`);\n        composeStylize(item, pid, rules, styles, className, isStyle);\n        cache.add(item);\n    }\n}\n/**\n * Cache to list to styles.\n */\nfunction join(arr) {\n    let res = \"\";\n    for (let i = 0; i < arr.length; i++)\n        res += arr[i];\n    return res;\n}\n/**\n * Noop changes.\n */\nconst noopChanges = {\n    add: () => undefined,\n    change: () => undefined,\n    remove: () => undefined\n};\n/**\n * Implement a cache/event emitter.\n */\nexport class Cache {\n    constructor(changes = noopChanges) {\n        this.changes = changes;\n        this.sheet = [];\n        this.changeId = 0;\n        this._keys = [];\n        this._children = Object.create(null);\n        this._counters = Object.create(null);\n    }\n    add(style) {\n        const count = this._counters[style.id] || 0;\n        const item = this._children[style.id] || style.clone();\n        this._counters[style.id] = count + 1;\n        if (count === 0) {\n            this._children[item.id] = item;\n            this._keys.push(item.id);\n            this.sheet.push(item.getStyles());\n            this.changeId++;\n            this.changes.add(item, this._keys.length - 1);\n        }\n        else if (item instanceof Cache && style instanceof Cache) {\n            const curIndex = this._keys.indexOf(style.id);\n            const prevItemChangeId = item.changeId;\n            item.merge(style);\n            if (item.changeId !== prevItemChangeId) {\n                this.sheet.splice(curIndex, 1, item.getStyles());\n                this.changeId++;\n                this.changes.change(item, curIndex, curIndex);\n            }\n        }\n    }\n    remove(style) {\n        const count = this._counters[style.id];\n        if (count) {\n            this._counters[style.id] = count - 1;\n            const item = this._children[style.id];\n            const index = this._keys.indexOf(item.id);\n            if (count === 1) {\n                delete this._counters[style.id];\n                delete this._children[style.id];\n                this._keys.splice(index, 1);\n                this.sheet.splice(index, 1);\n                this.changeId++;\n                this.changes.remove(item, index);\n            }\n            else if (item instanceof Cache && style instanceof Cache) {\n                const prevChangeId = item.changeId;\n                item.unmerge(style);\n                if (item.changeId !== prevChangeId) {\n                    this.sheet.splice(index, 1, item.getStyles());\n                    this.changeId++;\n                    this.changes.change(item, index, index);\n                }\n            }\n        }\n    }\n    values() {\n        return this._keys.map(key => this._children[key]);\n    }\n    merge(cache) {\n        for (const item of cache.values())\n            this.add(item);\n        return this;\n    }\n    unmerge(cache) {\n        for (const item of cache.values())\n            this.remove(item);\n        return this;\n    }\n    clone() {\n        return new Cache().merge(this);\n    }\n}\n/**\n * Selector is a dumb class made to represent nested CSS selectors.\n */\nexport class Selector {\n    constructor(selector, id) {\n        this.selector = selector;\n        this.id = id;\n    }\n    getStyles() {\n        return this.selector;\n    }\n    clone() {\n        return this;\n    }\n}\n/**\n * The style container registers a style string with selectors.\n */\nexport class Style extends Cache {\n    constructor(style, id) {\n        super();\n        this.style = style;\n        this.id = id;\n    }\n    getStyles() {\n        return `${this.sheet.join(\",\")}{${this.style}}`;\n    }\n    clone() {\n        return new Style(this.style, this.id).merge(this);\n    }\n}\n/**\n * Implement rule logic for style output.\n */\nexport class Rule extends Cache {\n    constructor(rule, style, id) {\n        super();\n        this.rule = rule;\n        this.style = style;\n        this.id = id;\n    }\n    getStyles() {\n        return `${this.rule}{${this.style}${join(this.sheet)}}`;\n    }\n    clone() {\n        return new Rule(this.rule, this.style, this.id).merge(this);\n    }\n}\nfunction key(pid, styles) {\n    const key = `f${stringHash(pid)}`;\n    if (process.env.NODE_ENV === \"production\" || !styles.$displayName)\n        return key;\n    return `${styles.$displayName}_${key}`;\n}\n/**\n * The FreeStyle class implements the API for everything else.\n */\nexport class FreeStyle extends Cache {\n    constructor(id, changes) {\n        super(changes);\n        this.id = id;\n    }\n    registerStyle(styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(\"&\", styles, rulesList, stylesList);\n        const id = key(pid, styles);\n        const selector = `.${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n        composeStylize(this, pid, rulesList, stylesList, selector, true);\n        return id;\n    }\n    registerKeyframes(keyframes) {\n        return this.registerHashRule(\"@keyframes\", keyframes);\n    }\n    registerHashRule(prefix, styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(\"\", styles, rulesList, stylesList);\n        const id = key(pid, styles);\n        const selector = `${prefix} ${process.env.NODE_ENV === \"production\" ? id : escape(id)}`;\n        const rule = new Rule(selector, \"\", `h\\0${pid}\\0${prefix}`);\n        composeStylize(rule, pid, rulesList, stylesList, \"\", false);\n        this.add(rule);\n        return id;\n    }\n    registerRule(rule, styles) {\n        const rulesList = [];\n        const stylesList = [];\n        const pid = stylize(rule, styles, rulesList, stylesList);\n        composeStylize(this, pid, rulesList, stylesList, \"\", false);\n    }\n    registerCss(styles) {\n        return this.registerRule(\"\", styles);\n    }\n    getStyles() {\n        return join(this.sheet);\n    }\n    clone() {\n        return new FreeStyle(this.id, this.changes).merge(this);\n    }\n}\n/**\n * Exports a simple function to create a new instance.\n */\nexport function create(changes) {\n    return new FreeStyle(`f${(++uniqueId).toString(36)}`, changes);\n}\n//# sourceMappingURL=index.js.map","/**\n * We need to do the following to *our* objects before passing to freestyle:\n * - For any `$nest` directive move up to FreeStyle style nesting\n * - For any `$unique` directive map to FreeStyle Unique\n * - For any `$debugName` directive return the debug name\n */\nexport function convertToStyles(object) {\n    /** The final result we will return */\n    var styles = {};\n    for (var key in object) {\n        /** Grab the value upfront */\n        var val = object[key];\n        /** TypeStyle configuration options */\n        if (key === '$nest') {\n            var nested = val;\n            for (var selector in nested) {\n                var subproperties = nested[selector];\n                styles[selector] = convertToStyles(subproperties);\n            }\n        }\n        else if (key === '$debugName') {\n            styles.$displayName = val;\n        }\n        else {\n            styles[key] = val;\n        }\n    }\n    return styles;\n}\n// todo: better name here\nexport function convertToKeyframes(frames) {\n    var result = {};\n    for (var offset in frames) {\n        if (offset !== '$debugName') {\n            result[offset] = frames[offset];\n        }\n    }\n    if (frames.$debugName) {\n        result.$displayName = frames.$debugName;\n    }\n    return result;\n}\n","/** Raf for node + browser */\nexport var raf = typeof requestAnimationFrame === 'undefined'\n    /**\n     * Make sure setTimeout is always invoked with\n     * `this` set to `window` or `global` automatically\n     **/\n    ? function (cb) { return setTimeout(cb); }\n    /**\n     * Make sure window.requestAnimationFrame is always invoked with `this` window\n     * We might have raf without window in case of `raf/polyfill` (recommended by React)\n     **/\n    : typeof window === 'undefined'\n        ? requestAnimationFrame\n        : requestAnimationFrame.bind(window);\n/**\n * Utility to join classes conditionally\n */\nexport function classes() {\n    var classes = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        classes[_i] = arguments[_i];\n    }\n    return classes\n        .map(function (c) { return c && typeof c === 'object' ? Object.keys(c).map(function (key) { return !!c[key] && key; }) : [c]; })\n        .reduce(function (flattened, c) { return flattened.concat(c); }, [])\n        .filter(function (c) { return !!c; })\n        .join(' ');\n}\n/**\n * Merges various styles into a single style object.\n * Note: if two objects have the same property the last one wins\n */\nexport function extend() {\n    var objects = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        objects[_i] = arguments[_i];\n    }\n    /** The final result we will return */\n    var result = {};\n    for (var _a = 0, objects_1 = objects; _a < objects_1.length; _a++) {\n        var object = objects_1[_a];\n        if (object == null || object === false) {\n            continue;\n        }\n        for (var key in object) {\n            /** Falsy values except a explicit 0 is ignored */\n            var val = object[key];\n            if (!val && val !== 0) {\n                continue;\n            }\n            /** if nested media or pseudo selector */\n            if (key === '$nest' && val) {\n                result[key] = result['$nest'] ? extend(result['$nest'], val) : val;\n            }\n            /** if freestyle sub key that needs merging. We come here due to our recursive calls */\n            else if ((key.indexOf('&') !== -1 || key.indexOf('@media') === 0)) {\n                result[key] = result[key] ? extend(result[key], val) : val;\n            }\n            else {\n                result[key] = val;\n            }\n        }\n    }\n    return result;\n}\n/**\n * Utility to help customize styles with media queries. e.g.\n * ```\n * style(\n *  media({maxWidth:500}, {color:'red'})\n * )\n * ```\n */\nexport var media = function (mediaQuery) {\n    var _a;\n    var objects = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        objects[_i - 1] = arguments[_i];\n    }\n    var mediaQuerySections = [];\n    if (mediaQuery.type)\n        mediaQuerySections.push(mediaQuery.type);\n    if (mediaQuery.orientation)\n        mediaQuerySections.push(\"(orientation: \" + mediaQuery.orientation + \")\");\n    if (mediaQuery.minWidth)\n        mediaQuerySections.push(\"(min-width: \" + mediaLength(mediaQuery.minWidth) + \")\");\n    if (mediaQuery.maxWidth)\n        mediaQuerySections.push(\"(max-width: \" + mediaLength(mediaQuery.maxWidth) + \")\");\n    if (mediaQuery.minHeight)\n        mediaQuerySections.push(\"(min-height: \" + mediaLength(mediaQuery.minHeight) + \")\");\n    if (mediaQuery.maxHeight)\n        mediaQuerySections.push(\"(max-height: \" + mediaLength(mediaQuery.maxHeight) + \")\");\n    var stringMediaQuery = \"@media \" + mediaQuerySections.join(' and ');\n    var object = {\n        $nest: (_a = {},\n            _a[stringMediaQuery] = extend.apply(void 0, objects),\n            _a)\n    };\n    return object;\n};\nvar mediaLength = function (value) {\n    return typeof value === 'string' ? value : value + \"px\";\n};\n","import * as FreeStyle from \"free-style\";\nimport { convertToStyles, convertToKeyframes } from './formatting';\nimport { extend, raf } from './utilities';\n/**\n * Creates an instance of free style with our options\n */\nvar createFreeStyle = function () { return FreeStyle.create(); };\n/**\n * Maintains a single stylesheet and keeps it in sync with requested styles\n */\nvar TypeStyle = /** @class */ (function () {\n    function TypeStyle(_a) {\n        var _this = this;\n        var autoGenerateTag = _a.autoGenerateTag;\n        /**\n         * Insert `raw` CSS as a string. This is useful for e.g.\n         * - third party CSS that you are customizing with template strings\n         * - generating raw CSS in JavaScript\n         * - reset libraries like normalize.css that you can use without loaders\n         */\n        this.cssRaw = function (mustBeValidCSS) {\n            if (!mustBeValidCSS) {\n                return;\n            }\n            _this._raw += mustBeValidCSS || '';\n            _this._pendingRawChange = true;\n            _this._styleUpdated();\n        };\n        /**\n         * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n         */\n        this.cssRule = function (selector) {\n            var objects = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                objects[_i - 1] = arguments[_i];\n            }\n            var styles = convertToStyles(extend.apply(void 0, objects));\n            _this._freeStyle.registerRule(selector, styles);\n            _this._styleUpdated();\n            return;\n        };\n        /**\n         * Renders styles to the singleton tag imediately\n         * NOTE: You should only call it on initial render to prevent any non CSS flash.\n         * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n         **/\n        this.forceRenderStyles = function () {\n            var target = _this._getTag();\n            if (!target) {\n                return;\n            }\n            target.textContent = _this.getStyles();\n        };\n        /**\n         * Utility function to register an @font-face\n         */\n        this.fontFace = function () {\n            var fontFace = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                fontFace[_i] = arguments[_i];\n            }\n            var freeStyle = _this._freeStyle;\n            for (var _a = 0, _b = fontFace; _a < _b.length; _a++) {\n                var face = _b[_a];\n                freeStyle.registerRule('@font-face', face);\n            }\n            _this._styleUpdated();\n            return;\n        };\n        /**\n         * Allows use to use the stylesheet in a node.js environment\n         */\n        this.getStyles = function () {\n            return (_this._raw || '') + _this._freeStyle.getStyles();\n        };\n        /**\n         * Takes keyframes and returns a generated animationName\n         */\n        this.keyframes = function (frames) {\n            var keyframes = convertToKeyframes(frames);\n            // TODO: replace $debugName with display name\n            var animationName = _this._freeStyle.registerKeyframes(keyframes);\n            _this._styleUpdated();\n            return animationName;\n        };\n        /**\n         * Helps with testing. Reinitializes FreeStyle + raw\n         */\n        this.reinit = function () {\n            /** reinit freestyle */\n            var freeStyle = createFreeStyle();\n            _this._freeStyle = freeStyle;\n            _this._lastFreeStyleChangeId = freeStyle.changeId;\n            /** reinit raw */\n            _this._raw = '';\n            _this._pendingRawChange = false;\n            /** Clear any styles that were flushed */\n            var target = _this._getTag();\n            if (target) {\n                target.textContent = '';\n            }\n        };\n        /** Sets the target tag where we write the css on style updates */\n        this.setStylesTarget = function (tag) {\n            /** Clear any data in any previous tag */\n            if (_this._tag) {\n                _this._tag.textContent = '';\n            }\n            _this._tag = tag;\n            /** This special time buffer immediately */\n            _this.forceRenderStyles();\n        };\n        /**\n         * Takes an object where property names are ideal class names and property values are CSSProperties, and\n         * returns an object where property names are the same ideal class names and the property values are\n         * the actual generated class names using the ideal class name as the $debugName\n         */\n        this.stylesheet = function (classes) {\n            var classNames = Object.getOwnPropertyNames(classes);\n            var result = {};\n            for (var _i = 0, classNames_1 = classNames; _i < classNames_1.length; _i++) {\n                var className = classNames_1[_i];\n                var classDef = classes[className];\n                if (classDef) {\n                    classDef.$debugName = className;\n                    result[className] = _this.style(classDef);\n                }\n            }\n            return result;\n        };\n        var freeStyle = createFreeStyle();\n        this._autoGenerateTag = autoGenerateTag;\n        this._freeStyle = freeStyle;\n        this._lastFreeStyleChangeId = freeStyle.changeId;\n        this._pending = 0;\n        this._pendingRawChange = false;\n        this._raw = '';\n        this._tag = undefined;\n        // rebind prototype to TypeStyle.  It might be better to do a function() { return this.style.apply(this, arguments)}\n        this.style = this.style.bind(this);\n    }\n    /**\n     * Only calls cb all sync operations settle\n     */\n    TypeStyle.prototype._afterAllSync = function (cb) {\n        var _this = this;\n        this._pending++;\n        var pending = this._pending;\n        raf(function () {\n            if (pending !== _this._pending) {\n                return;\n            }\n            cb();\n        });\n    };\n    TypeStyle.prototype._getTag = function () {\n        if (this._tag) {\n            return this._tag;\n        }\n        if (this._autoGenerateTag) {\n            var tag = typeof window === 'undefined'\n                ? { textContent: '' }\n                : document.createElement('style');\n            if (typeof document !== 'undefined') {\n                document.head.appendChild(tag);\n            }\n            this._tag = tag;\n            return tag;\n        }\n        return undefined;\n    };\n    /** Checks if the style tag needs updating and if so queues up the change */\n    TypeStyle.prototype._styleUpdated = function () {\n        var _this = this;\n        var changeId = this._freeStyle.changeId;\n        var lastChangeId = this._lastFreeStyleChangeId;\n        if (!this._pendingRawChange && changeId === lastChangeId) {\n            return;\n        }\n        this._lastFreeStyleChangeId = changeId;\n        this._pendingRawChange = false;\n        this._afterAllSync(function () { return _this.forceRenderStyles(); });\n    };\n    TypeStyle.prototype.style = function () {\n        var className = this._freeStyle.registerStyle(convertToStyles(extend.apply(undefined, arguments)));\n        this._styleUpdated();\n        return className;\n    };\n    return TypeStyle;\n}());\nexport { TypeStyle };\n","import { TypeStyle } from './internal/typestyle';\nexport { TypeStyle };\n/**\n * All the CSS types in the 'types' namespace\n */\nimport * as types from './types';\nexport { types };\n/**\n * Export certain utilities\n */\nexport { extend, classes, media } from './internal/utilities';\n/** Zero configuration, default instance of TypeStyle */\nvar ts = new TypeStyle({ autoGenerateTag: true });\n/** Sets the target tag where we write the css on style updates */\nexport var setStylesTarget = ts.setStylesTarget;\n/**\n * Insert `raw` CSS as a string. This is useful for e.g.\n * - third party CSS that you are customizing with template strings\n * - generating raw CSS in JavaScript\n * - reset libraries like normalize.css that you can use without loaders\n */\nexport var cssRaw = ts.cssRaw;\n/**\n * Takes CSSProperties and registers it to a global selector (body, html, etc.)\n */\nexport var cssRule = ts.cssRule;\n/**\n * Renders styles to the singleton tag imediately\n * NOTE: You should only call it on initial render to prevent any non CSS flash.\n * After that it is kept sync using `requestAnimationFrame` and we haven't noticed any bad flashes.\n **/\nexport var forceRenderStyles = ts.forceRenderStyles;\n/**\n * Utility function to register an @font-face\n */\nexport var fontFace = ts.fontFace;\n/**\n * Allows use to use the stylesheet in a node.js environment\n */\nexport var getStyles = ts.getStyles;\n/**\n * Takes keyframes and returns a generated animationName\n */\nexport var keyframes = ts.keyframes;\n/**\n * Helps with testing. Reinitializes FreeStyle + raw\n */\nexport var reinit = ts.reinit;\n/**\n * Takes CSSProperties and return a generated className you can use on your component\n */\nexport var style = ts.style;\n/**\n * Takes an object where property names are ideal class names and property values are CSSProperties, and\n * returns an object where property names are the same ideal class names and the property values are\n * the actual generated class names using the ideal class name as the $debugName\n */\nexport var stylesheet = ts.stylesheet;\n/**\n * Creates a new instance of TypeStyle separate from the default instance.\n *\n * - Use this for creating a different typestyle instance for a shadow dom component.\n * - Use this if you don't want an auto tag generated and you just want to collect the CSS.\n *\n * NOTE: styles aren't shared between different instances.\n */\nexport function createTypeStyle(target) {\n    var instance = new TypeStyle({ autoGenerateTag: false });\n    if (target) {\n        instance.setStylesTarget(target);\n    }\n    return instance;\n}\n"],"sourceRoot":""}