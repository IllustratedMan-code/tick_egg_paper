{"version":3,"sources":["webpack://@jupyterlab/application-top/./node_modules/codemirror/theme/abbott.css","webpack://@jupyterlab/application-top/./node_modules/css-loader/dist/runtime/api.js","webpack://@jupyterlab/application-top/./node_modules/css-loader/dist/runtime/cssWithMappingToString.js","webpack://@jupyterlab/application-top/./node_modules/codemirror/theme/abbott.css?9759","webpack://@jupyterlab/application-top/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js"],"names":["___CSS_LOADER_EXPORT___","push","module","id","exports","cssWithMappingToString","list","toString","this","map","item","content","concat","join","i","modules","mediaQuery","dedupe","alreadyImportedModules","length","_i","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","call","slice","constructor","name","Array","from","test","len","arr2","Symbol","iterator","_arr","_n","_d","_s","_e","next","done","value","err","isArray","_item","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","sourceMapping","sourceURLs","sources","source","sourceRoot","options","insert","singleton","update","isOldIE","memo","memorize","Boolean","window","document","all","atob","getTarget","target","styleTarget","querySelector","HTMLIFrameElement","contentDocument","head","e","stylesInDom","getIndexByIdentifier","identifier","result","modulesToDom","idCountMap","identifiers","base","count","index","obj","css","media","sourceMap","references","updater","addStyle","insertStyleElement","style","createElement","attributes","nonce","keys","forEach","key","setAttribute","Error","appendChild","removeStyleElement","parentNode","removeChild","replaceText","textStore","replace","replacement","filter","applyToSingletonTag","remove","styleSheet","cssText","cssNode","createTextNode","childNodes","insertBefore","applyToTag","removeAttribute","firstChild","singletonCounter","styleIndex","bind","updateStyle","newObj","lastIdentifiers","newList","newLastIdentifiers","_identifier","_index","splice"],"mappings":"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","file":"6962.6d7125f759d926dcf34f.js?v=6d7125f759d926dcf34f","sourcesContent":["// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../css-loader/dist/runtime/cssWithMappingToString.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/*\\n * abbott.css\\n * A warm, dark theme for prose and code, with pastels and pretty greens.\\n *\\n * Ported from abbott.vim (https://github.com/bcat/abbott.vim) version 2.1.\\n * Original design and CodeMirror port by Jonathan Rascher.\\n *\\n * This theme shares the following color palette with the Vim color scheme.\\n *\\n * Brown shades:\\n *   bistre: #231c14\\n *   chocolate: #3c3022\\n *   cocoa: #745d42\\n *   vanilla_cream: #fef3b4\\n *\\n * Red shades:\\n *   crimson: #d80450\\n *   cinnabar: #f63f05\\n *\\n * Green shades:\\n *   dark_olive: #273900\\n *   forest_green: #24a507\\n *   chartreuse: #a0ea00\\n *   pastel_chartreuse: #d8ff84\\n *\\n * Yellow shades:\\n *   marigold: #fbb32f\\n *   lemon_meringue: #fbec5d\\n *\\n * Blue shades:\\n *   cornflower_blue: #3f91f1\\n *   periwinkle_blue: #8ccdf0\\n *\\n * Magenta shades:\\n *   french_pink: #ec6c99\\n *   lavender: #e6a2f3\\n *\\n * Cyan shades:\\n *   zomp: #39a78d\\n *   seafoam_green: #00ff7f\\n */\\n\\n/* Style the UI: */\\n\\n/* Equivalent to Vim's Normal group. */\\n.cm-s-abbott.CodeMirror {\\n  background: #231c14 /* bistre */;\\n  color: #d8ff84 /* pastel_chartreuse */;\\n}\\n\\n/* Roughly equivalent to Vim's LineNr group. */\\n.cm-s-abbott .CodeMirror-gutters {\\n  background: #231c14 /* bistre */;\\n  border: none;\\n}\\n.cm-s-abbott .CodeMirror-linenumber { color: #fbec5d /* lemon_meringue */; }\\n\\n.cm-s-abbott .CodeMirror-guttermarker { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's FoldColumn group. */\\n.cm-s-abbott .CodeMirror-guttermarker-subtle { color: #fbb32f /* marigold */; }\\n\\n/*\\n * Roughly equivalent to Vim's CursorColumn group. (We use a brighter color\\n * since Vim's cursorcolumn option highlights a whole column, whereas\\n * CodeMirror's rule just highlights a thin line.)\\n */\\n.cm-s-abbott .CodeMirror-ruler { border-color: #745d42 /* cocoa */; }\\n\\n/* Equivalent to Vim's Cursor group in insert mode. */\\n.cm-s-abbott .CodeMirror-cursor { border-color: #a0ea00 /* chartreuse */; }\\n\\n/* Equivalent to Vim's Cursor group in normal mode. */\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursor,\\n.cm-s-abbott .cm-animate-fat-cursor {\\n  /*\\n   * CodeMirror doesn't allow changing the foreground color of the character\\n   * under the cursor, so we can't use a reverse video effect for the cursor.\\n   * Instead, make it semitransparent.\\n   */\\n  background: rgba(160, 234, 0, 0.5) /* chartreuse */;\\n}\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursors {\\n  /*\\n   * Boost the z-index so the fat cursor shows up on top of text and\\n   * matchingbracket/matchingtag highlights.\\n   */\\n  z-index: 3;\\n}\\n\\n/* Equivalent to Vim's Cursor group in replace mode. */\\n.cm-s-abbott .CodeMirror-overwrite .CodeMirror-cursor {\\n  border-bottom: 1px solid #a0ea00 /* chartreuse */;\\n  border-left: none;\\n  width: auto;\\n}\\n\\n/* Roughly equivalent to Vim's CursorIM group. */\\n.cm-s-abbott .CodeMirror-secondarycursor {\\n  border-color: #00ff7f /* seafoam_green */;\\n}\\n\\n/* Roughly equivalent to Vim's Visual group. */\\n.cm-s-abbott .CodeMirror-selected,\\n.cm-s-abbott.CodeMirror-focused .CodeMirror-selected {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::selection,\\n.cm-s-abbott .CodeMirror-line > span::selection,\\n.cm-s-abbott .CodeMirror-line > span > span::selection {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span > span::-moz-selection {\\n  background: #273900 /* dark_olive */;\\n}\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott .cm-tab { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Search group. */\\n.cm-s-abbott .cm-searching {\\n  background: #fef3b4 /* vanilla_cream */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n/* Style syntax highlighting modes: */\\n\\n/* Equivalent to Vim's Comment group. */\\n.cm-s-abbott span.cm-comment {\\n  color: #fbb32f /* marigold */;\\n  font-style: italic;\\n}\\n\\n/* Equivalent to Vim's String group. */\\n.cm-s-abbott span.cm-string,\\n.cm-s-abbott span.cm-string-2 {\\n  color: #e6a2f3 /* lavender */;\\n}\\n\\n/* Equivalent to Vim's Constant group. */\\n.cm-s-abbott span.cm-number,\\n.cm-s-abbott span.cm-string.cm-url { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott span.cm-invalidchar { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Special group. */\\n.cm-s-abbott span.cm-atom { color: #fef3b4 /* vanilla_cream */; }\\n\\n/* Equivalent to Vim's Delimiter group. */\\n.cm-s-abbott span.cm-bracket,\\n.cm-s-abbott span.cm-punctuation {\\n  color: #fef3b4 /* vanilla_cream */;\\n}\\n\\n/* Equivalent Vim's Operator group. */\\n.cm-s-abbott span.cm-operator { font-weight: bold; }\\n\\n/* Roughly equivalent to Vim's Identifier group. */\\n.cm-s-abbott span.cm-def,\\n.cm-s-abbott span.cm-variable,\\n.cm-s-abbott span.cm-variable-2,\\n.cm-s-abbott span.cm-variable-3 {\\n  color: #8ccdf0 /* periwinkle_blue */;\\n}\\n\\n/* Roughly equivalent to Vim's Function group. */\\n.cm-s-abbott span.cm-builtin,\\n.cm-s-abbott span.cm-property,\\n.cm-s-abbott span.cm-qualifier {\\n  color: #3f91f1 /* cornflower_blue */;\\n}\\n\\n/* Equivalent to Vim's Type group. */\\n.cm-s-abbott span.cm-type { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's Keyword group. */\\n.cm-s-abbott span.cm-keyword {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's PreProc group. */\\n.cm-s-abbott span.cm-meta { color: #ec6c99 /* french_pink */; }\\n\\n/* Equivalent to Vim's htmlTagName group (linked to Statement). */\\n.cm-s-abbott span.cm-tag {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's htmlArg group (linked to Type). */\\n.cm-s-abbott span.cm-attribute { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's htmlH1, markdownH1, etc. groups (linked to Title). */\\n.cm-s-abbott span.cm-header {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's markdownRule group (linked to PreProc). */\\n.cm-s-abbott span.cm-hr { color: #ec6c99 /* french_pink */; }\\n\\n/* Roughly equivalent to Vim's Underlined group. */\\n.cm-s-abbott span.cm-link { color: #e6a2f3 /* lavender */; }\\n\\n/* Equivalent to Vim's diffRemoved group. */\\n.cm-s-abbott span.cm-negative {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Equivalent to Vim's diffAdded group. */\\n.cm-s-abbott span.cm-positive {\\n  background: #a0ea00 /* chartreuse */;\\n  color: #231c14 /* bistre */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's Error group. */\\n.cm-s-abbott span.cm-error {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Style addons: */\\n\\n/* Equivalent to Vim's MatchParen group. */\\n.cm-s-abbott span.CodeMirror-matchingbracket {\\n  background: #745d42 /* cocoa */ !important;\\n  color: #231c14 /* bistre */ !important;\\n  font-weight: bold;\\n}\\n\\n/*\\n * Roughly equivalent to Vim's Error group. (Vim doesn't seem to have a direct\\n * equivalent in its own matchparen plugin, but many syntax highlighting plugins\\n * mark mismatched brackets as Error.)\\n */\\n.cm-s-abbott span.CodeMirror-nonmatchingbracket {\\n  background: #d80450 /* crimson */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n.cm-s-abbott .CodeMirror-matchingtag,\\n.cm-s-abbott .cm-matchhighlight {\\n  outline: 1px solid #39a78d /* zomp */;\\n}\\n\\n/* Equivalent to Vim's CursorLine group. */\\n.cm-s-abbott .CodeMirror-activeline-background,\\n.cm-s-abbott .CodeMirror-activeline-gutter {\\n  background: #3c3022 /* chocolate */;\\n}\\n\\n/* Equivalent to Vim's CursorLineNr group. */\\n.cm-s-abbott .CodeMirror-activeline-gutter .CodeMirror-linenumber {\\n  color: #d8ff84 /* pastel_chartreuse */;\\n  font-weight: bold;\\n}\\n\\n/* Roughly equivalent to Vim's Folded group. */\\n.cm-s-abbott .CodeMirror-foldmarker {\\n  color: #f63f05 /* cinnabar */;\\n  text-shadow: none;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./node_modules/codemirror/theme/abbott.css\"],\"names\":[],\"mappings\":\"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwCE;;AAEF,kBAAkB;;AAElB,sCAAsC;AACtC;EACE,gCAAgC;EAChC,sCAAsC;AACxC;;AAEA,8CAA8C;AAC9C;EACE,gCAAgC;EAChC,YAAY;AACd;AACA,sCAAsC,mCAAmC,EAAE;;AAE3E,wCAAwC,6BAA6B,EAAE;;AAEvE,kDAAkD;AAClD,+CAA+C,6BAA6B,EAAE;;AAE9E;;;;EAIE;AACF,iCAAiC,iCAAiC,EAAE;;AAEpE,qDAAqD;AACrD,kCAAkC,sCAAsC,EAAE;;AAE1E,qDAAqD;AACrD;;EAEE;;;;IAIE;EACF,mDAAmD;AACrD;AACA;EACE;;;IAGE;EACF,UAAU;AACZ;;AAEA,sDAAsD;AACtD;EACE,iDAAiD;EACjD,iBAAiB;EACjB,WAAW;AACb;;AAEA,gDAAgD;AAChD;EACE,yCAAyC;AAC3C;;AAEA,8CAA8C;AAC9C;;EAEE,oCAAoC;AACtC;AACA;;;EAGE,oCAAoC;AACtC;AACA;;;EAGE,oCAAoC;AACtC;;AAEA,kDAAkD;AAClD,uBAAuB,kCAAkC,EAAE;;AAE3D,sCAAsC;AACtC;EACE,kDAAkD;EAClD,sCAAsC;AACxC;;AAEA,qCAAqC;;AAErC,uCAAuC;AACvC;EACE,6BAA6B;EAC7B,kBAAkB;AACpB;;AAEA,sCAAsC;AACtC;;EAEE,6BAA6B;AAC/B;;AAEA,wCAAwC;AACxC;qCACqC,6BAA6B,EAAE;;AAEpE,kDAAkD;AAClD,mCAAmC,kCAAkC,EAAE;;AAEvE,uCAAuC;AACvC,4BAA4B,kCAAkC,EAAE;;AAEhE,yCAAyC;AACzC;;EAEE,kCAAkC;AACpC;;AAEA,qCAAqC;AACrC,gCAAgC,iBAAiB,EAAE;;AAEnD,kDAAkD;AAClD;;;;EAIE,oCAAoC;AACtC;;AAEA,gDAAgD;AAChD;;;EAGE,oCAAoC;AACtC;;AAEA,oCAAoC;AACpC,4BAA4B,iCAAiC,EAAE;;AAE/D,uCAAuC;AACvC;EACE,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA,uCAAuC;AACvC,4BAA4B,gCAAgC,EAAE;;AAE9D,iEAAiE;AACjE;EACE,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA,wDAAwD;AACxD,iCAAiC,iCAAiC,EAAE;;AAEpE,2EAA2E;AAC3E;EACE,4BAA4B;EAC5B,iBAAiB;AACnB;;AAEA,gEAAgE;AAChE,0BAA0B,gCAAgC,EAAE;;AAE5D,kDAAkD;AAClD,4BAA4B,6BAA6B,EAAE;;AAE3D,2CAA2C;AAC3C;EACE,iCAAiC;EACjC,2BAA2B;AAC7B;;AAEA,yCAAyC;AACzC;EACE,oCAAoC;EACpC,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA,qCAAqC;AACrC;EACE,iCAAiC;EACjC,2BAA2B;AAC7B;;AAEA,kBAAkB;;AAElB,0CAA0C;AAC1C;EACE,0CAA0C;EAC1C,sCAAsC;EACtC,iBAAiB;AACnB;;AAEA;;;;EAIE;AACF;EACE,4CAA4C;EAC5C,sCAAsC;AACxC;;AAEA;;EAEE,qCAAqC;AACvC;;AAEA,0CAA0C;AAC1C;;EAEE,mCAAmC;AACrC;;AAEA,4CAA4C;AAC5C;EACE,sCAAsC;EACtC,iBAAiB;AACnB;;AAEA,8CAA8C;AAC9C;EACE,6BAA6B;EAC7B,iBAAiB;AACnB\",\"sourcesContent\":[\"/*\\n * abbott.css\\n * A warm, dark theme for prose and code, with pastels and pretty greens.\\n *\\n * Ported from abbott.vim (https://github.com/bcat/abbott.vim) version 2.1.\\n * Original design and CodeMirror port by Jonathan Rascher.\\n *\\n * This theme shares the following color palette with the Vim color scheme.\\n *\\n * Brown shades:\\n *   bistre: #231c14\\n *   chocolate: #3c3022\\n *   cocoa: #745d42\\n *   vanilla_cream: #fef3b4\\n *\\n * Red shades:\\n *   crimson: #d80450\\n *   cinnabar: #f63f05\\n *\\n * Green shades:\\n *   dark_olive: #273900\\n *   forest_green: #24a507\\n *   chartreuse: #a0ea00\\n *   pastel_chartreuse: #d8ff84\\n *\\n * Yellow shades:\\n *   marigold: #fbb32f\\n *   lemon_meringue: #fbec5d\\n *\\n * Blue shades:\\n *   cornflower_blue: #3f91f1\\n *   periwinkle_blue: #8ccdf0\\n *\\n * Magenta shades:\\n *   french_pink: #ec6c99\\n *   lavender: #e6a2f3\\n *\\n * Cyan shades:\\n *   zomp: #39a78d\\n *   seafoam_green: #00ff7f\\n */\\n\\n/* Style the UI: */\\n\\n/* Equivalent to Vim's Normal group. */\\n.cm-s-abbott.CodeMirror {\\n  background: #231c14 /* bistre */;\\n  color: #d8ff84 /* pastel_chartreuse */;\\n}\\n\\n/* Roughly equivalent to Vim's LineNr group. */\\n.cm-s-abbott .CodeMirror-gutters {\\n  background: #231c14 /* bistre */;\\n  border: none;\\n}\\n.cm-s-abbott .CodeMirror-linenumber { color: #fbec5d /* lemon_meringue */; }\\n\\n.cm-s-abbott .CodeMirror-guttermarker { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's FoldColumn group. */\\n.cm-s-abbott .CodeMirror-guttermarker-subtle { color: #fbb32f /* marigold */; }\\n\\n/*\\n * Roughly equivalent to Vim's CursorColumn group. (We use a brighter color\\n * since Vim's cursorcolumn option highlights a whole column, whereas\\n * CodeMirror's rule just highlights a thin line.)\\n */\\n.cm-s-abbott .CodeMirror-ruler { border-color: #745d42 /* cocoa */; }\\n\\n/* Equivalent to Vim's Cursor group in insert mode. */\\n.cm-s-abbott .CodeMirror-cursor { border-color: #a0ea00 /* chartreuse */; }\\n\\n/* Equivalent to Vim's Cursor group in normal mode. */\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursor,\\n.cm-s-abbott .cm-animate-fat-cursor {\\n  /*\\n   * CodeMirror doesn't allow changing the foreground color of the character\\n   * under the cursor, so we can't use a reverse video effect for the cursor.\\n   * Instead, make it semitransparent.\\n   */\\n  background: rgba(160, 234, 0, 0.5) /* chartreuse */;\\n}\\n.cm-s-abbott.cm-fat-cursor .CodeMirror-cursors {\\n  /*\\n   * Boost the z-index so the fat cursor shows up on top of text and\\n   * matchingbracket/matchingtag highlights.\\n   */\\n  z-index: 3;\\n}\\n\\n/* Equivalent to Vim's Cursor group in replace mode. */\\n.cm-s-abbott .CodeMirror-overwrite .CodeMirror-cursor {\\n  border-bottom: 1px solid #a0ea00 /* chartreuse */;\\n  border-left: none;\\n  width: auto;\\n}\\n\\n/* Roughly equivalent to Vim's CursorIM group. */\\n.cm-s-abbott .CodeMirror-secondarycursor {\\n  border-color: #00ff7f /* seafoam_green */;\\n}\\n\\n/* Roughly equivalent to Vim's Visual group. */\\n.cm-s-abbott .CodeMirror-selected,\\n.cm-s-abbott.CodeMirror-focused .CodeMirror-selected {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::selection,\\n.cm-s-abbott .CodeMirror-line > span::selection,\\n.cm-s-abbott .CodeMirror-line > span > span::selection {\\n  background: #273900 /* dark_olive */;\\n}\\n.cm-s-abbott .CodeMirror-line::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span::-moz-selection,\\n.cm-s-abbott .CodeMirror-line > span > span::-moz-selection {\\n  background: #273900 /* dark_olive */;\\n}\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott .cm-tab { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Search group. */\\n.cm-s-abbott .cm-searching {\\n  background: #fef3b4 /* vanilla_cream */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n/* Style syntax highlighting modes: */\\n\\n/* Equivalent to Vim's Comment group. */\\n.cm-s-abbott span.cm-comment {\\n  color: #fbb32f /* marigold */;\\n  font-style: italic;\\n}\\n\\n/* Equivalent to Vim's String group. */\\n.cm-s-abbott span.cm-string,\\n.cm-s-abbott span.cm-string-2 {\\n  color: #e6a2f3 /* lavender */;\\n}\\n\\n/* Equivalent to Vim's Constant group. */\\n.cm-s-abbott span.cm-number,\\n.cm-s-abbott span.cm-string.cm-url { color: #f63f05 /* cinnabar */; }\\n\\n/* Roughly equivalent to Vim's SpecialKey group. */\\n.cm-s-abbott span.cm-invalidchar { color: #00ff7f /* seafoam_green */; }\\n\\n/* Equivalent to Vim's Special group. */\\n.cm-s-abbott span.cm-atom { color: #fef3b4 /* vanilla_cream */; }\\n\\n/* Equivalent to Vim's Delimiter group. */\\n.cm-s-abbott span.cm-bracket,\\n.cm-s-abbott span.cm-punctuation {\\n  color: #fef3b4 /* vanilla_cream */;\\n}\\n\\n/* Equivalent Vim's Operator group. */\\n.cm-s-abbott span.cm-operator { font-weight: bold; }\\n\\n/* Roughly equivalent to Vim's Identifier group. */\\n.cm-s-abbott span.cm-def,\\n.cm-s-abbott span.cm-variable,\\n.cm-s-abbott span.cm-variable-2,\\n.cm-s-abbott span.cm-variable-3 {\\n  color: #8ccdf0 /* periwinkle_blue */;\\n}\\n\\n/* Roughly equivalent to Vim's Function group. */\\n.cm-s-abbott span.cm-builtin,\\n.cm-s-abbott span.cm-property,\\n.cm-s-abbott span.cm-qualifier {\\n  color: #3f91f1 /* cornflower_blue */;\\n}\\n\\n/* Equivalent to Vim's Type group. */\\n.cm-s-abbott span.cm-type { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's Keyword group. */\\n.cm-s-abbott span.cm-keyword {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's PreProc group. */\\n.cm-s-abbott span.cm-meta { color: #ec6c99 /* french_pink */; }\\n\\n/* Equivalent to Vim's htmlTagName group (linked to Statement). */\\n.cm-s-abbott span.cm-tag {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's htmlArg group (linked to Type). */\\n.cm-s-abbott span.cm-attribute { color: #24a507 /* forest_green */; }\\n\\n/* Equivalent to Vim's htmlH1, markdownH1, etc. groups (linked to Title). */\\n.cm-s-abbott span.cm-header {\\n  color: #d80450 /* crimson */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's markdownRule group (linked to PreProc). */\\n.cm-s-abbott span.cm-hr { color: #ec6c99 /* french_pink */; }\\n\\n/* Roughly equivalent to Vim's Underlined group. */\\n.cm-s-abbott span.cm-link { color: #e6a2f3 /* lavender */; }\\n\\n/* Equivalent to Vim's diffRemoved group. */\\n.cm-s-abbott span.cm-negative {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Equivalent to Vim's diffAdded group. */\\n.cm-s-abbott span.cm-positive {\\n  background: #a0ea00 /* chartreuse */;\\n  color: #231c14 /* bistre */;\\n  font-weight: bold;\\n}\\n\\n/* Equivalent to Vim's Error group. */\\n.cm-s-abbott span.cm-error {\\n  background: #d80450 /* crimson */;\\n  color: #231c14 /* bistre */;\\n}\\n\\n/* Style addons: */\\n\\n/* Equivalent to Vim's MatchParen group. */\\n.cm-s-abbott span.CodeMirror-matchingbracket {\\n  background: #745d42 /* cocoa */ !important;\\n  color: #231c14 /* bistre */ !important;\\n  font-weight: bold;\\n}\\n\\n/*\\n * Roughly equivalent to Vim's Error group. (Vim doesn't seem to have a direct\\n * equivalent in its own matchparen plugin, but many syntax highlighting plugins\\n * mark mismatched brackets as Error.)\\n */\\n.cm-s-abbott span.CodeMirror-nonmatchingbracket {\\n  background: #d80450 /* crimson */ !important;\\n  color: #231c14 /* bistre */ !important;\\n}\\n\\n.cm-s-abbott .CodeMirror-matchingtag,\\n.cm-s-abbott .cm-matchhighlight {\\n  outline: 1px solid #39a78d /* zomp */;\\n}\\n\\n/* Equivalent to Vim's CursorLine group. */\\n.cm-s-abbott .CodeMirror-activeline-background,\\n.cm-s-abbott .CodeMirror-activeline-gutter {\\n  background: #3c3022 /* chocolate */;\\n}\\n\\n/* Equivalent to Vim's CursorLineNr group. */\\n.cm-s-abbott .CodeMirror-activeline-gutter .CodeMirror-linenumber {\\n  color: #d8ff84 /* pastel_chartreuse */;\\n  font-weight: bold;\\n}\\n\\n/* Roughly equivalent to Vim's Folded group. */\\n.cm-s-abbott .CodeMirror-foldmarker {\\n  color: #f63f05 /* cinnabar */;\\n  text-shadow: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","\"use strict\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr && (typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]); if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nmodule.exports = function cssWithMappingToString(item) {\n  var _item = _slicedToArray(item, 4),\n      content = _item[1],\n      cssMapping = _item[3];\n\n  if (typeof btoa === \"function\") {\n    // eslint-disable-next-line no-undef\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n    var sourceMapping = \"/*# \".concat(data, \" */\");\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join(\"\\n\");\n  }\n\n  return [content].join(\"\\n\");\n};","import api from \"!../../style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../css-loader/dist/cjs.js!./abbott.css\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","\"use strict\";\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce = typeof __webpack_nonce__ !== 'undefined' ? __webpack_nonce__ : null;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};"],"sourceRoot":""}