import { Cell, ICellModel } from '@jupyterlab/cells';
import { CodeMirrorEditor } from '@jupyterlab/codemirror';
import { INotebookTracker } from '@jupyterlab/notebook';
import { CommandRegistry } from '@lumino/commands';
export interface IKeybinding {
    command: string;
    keys: string;
    context: string;
    mapfn: string;
    enabled: boolean;
}
export interface IOptions {
    commands: CommandRegistry;
    cm: CodeMirrorEditor;
    enabled: boolean;
    userKeybindings: IKeybinding[];
}
export declare class VimCellManager {
    constructor({ commands, cm, enabled, userKeybindings }: IOptions);
    onActiveCellChanged(tracker: INotebookTracker, activeCell: Cell<ICellModel> | null): void;
    modifyCell(activeCell: Cell<ICellModel> | null): void;
    private _commands;
    private _cm;
    lastActiveCell: Cell<ICellModel> | null;
    enabled: boolean;
    userKeybindings: IKeybinding[];
}
