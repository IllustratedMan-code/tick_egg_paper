{"version":3,"file":"audit.js","names":["REGISTRY_DOMAIN","ProxyAudit","constructor","config","options","enabled","strict_ssl","undefined","logger","register_middlewares","app","auth","fetchAudit","req","res","headers","requestOptions","agent","https","Agent","rejectUnauthorized","body","JSON","stringify","method","https_proxy","createHttpsProxyAgent","Object","assign","auditEndpoint","baseUrl","route","path","debug","response","fetch","ok","status","send","json","warn","end","error","handleAudit","router","express","Router","post","jsonParser","limit","use"],"sources":["../src/audit.ts"],"sourcesContent":["import https from 'https';\nimport fetch from 'node-fetch';\nimport express, { Request, Response } from 'express';\nimport createHttpsProxyAgent from 'https-proxy-agent';\nimport { json as jsonParser } from 'body-parser';\nimport { Logger, IPluginMiddleware, IBasicAuth, PluginOptions } from '@verdaccio/types';\n\nimport { ConfigAudit } from './types';\n\n// FUTURE: we should be able to overwrite this\nexport const REGISTRY_DOMAIN = 'https://registry.npmjs.org';\n\nexport default class ProxyAudit implements IPluginMiddleware<ConfigAudit> {\n  public enabled: boolean;\n  public logger: Logger;\n  public strict_ssl: boolean;\n\n  public constructor(config: ConfigAudit, options: PluginOptions<ConfigAudit>) {\n    this.enabled = config.enabled || false;\n    this.strict_ssl = config.strict_ssl !== undefined ? config.strict_ssl : true;\n    this.logger = options.logger;\n  }\n\n  public register_middlewares(app: any, auth: IBasicAuth<ConfigAudit>): void {\n    const fetchAudit = (req: Request, res: Response & { report_error?: Function }): void => {\n      const headers = req.headers;\n\n      headers['host'] = 'registry.npmjs.org';\n      headers['content-encoding'] = 'gzip,deflate,br';\n\n      let requestOptions: any = {\n        agent: new https.Agent({ rejectUnauthorized: this.strict_ssl }),\n        body: JSON.stringify(req.body),\n        headers,\n        method: req.method,\n      };\n\n      if (auth?.config?.https_proxy) {\n        // we should check whether this works fine after this migration\n        // please notify if anyone is having issues\n        const agent = createHttpsProxyAgent(auth?.config?.https_proxy);\n        requestOptions = Object.assign({}, requestOptions, {\n          agent,\n        });\n      }\n\n      (async () => {\n        try {\n          const auditEndpoint = `${REGISTRY_DOMAIN}${req.baseUrl}${req.route.path}`;\n          this.logger.debug('fetching audit from ' + auditEndpoint);\n\n          const response = await fetch(auditEndpoint, requestOptions);\n\n          if (response.ok) {\n            res.status(response.status).send(await response.json());\n          } else {\n            this.logger.warn('could not fetch audit: ' + JSON.stringify(await response.json()));\n            res.status(response.status).end();\n          }\n        } catch (error) {\n          this.logger.warn('could not fetch audit: ' + error);\n          res.status(500).end();\n        }\n      })();\n    };\n\n    const handleAudit = (req: Request, res: Response): void => {\n      if (this.enabled) {\n        fetchAudit(req, res);\n      } else {\n        res.status(500).end();\n      }\n    };\n\n    /* eslint new-cap:off */\n    const router = express.Router();\n    /* eslint new-cap:off */\n\n    router.post('/audits', jsonParser({ limit: '10mb' }), handleAudit);\n    router.post('/audits/quick', jsonParser({ limit: '10mb' }), handleAudit);\n\n    router.post('/advisories/bulk', jsonParser({ limit: '10mb' }), handleAudit);\n\n    app.use('/-/npm/v1/security', router);\n  }\n}\n"],"mappings":"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"}